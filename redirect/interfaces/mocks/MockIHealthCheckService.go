// Code generated by MockGen. DO NOT EDIT.
// Source: .\IHealthCheckService.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/mehulgohil/shorti.fy/redirect/models"
)

// MockIHealthCheckService is a mock of IHealthCheckService interface.
type MockIHealthCheckService struct {
	ctrl     *gomock.Controller
	recorder *MockIHealthCheckServiceMockRecorder
}

// MockIHealthCheckServiceMockRecorder is the mock recorder for MockIHealthCheckService.
type MockIHealthCheckServiceMockRecorder struct {
	mock *MockIHealthCheckService
}

// NewMockIHealthCheckService creates a new mock instance.
func NewMockIHealthCheckService(ctrl *gomock.Controller) *MockIHealthCheckService {
	mock := &MockIHealthCheckService{ctrl: ctrl}
	mock.recorder = &MockIHealthCheckServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIHealthCheckService) EXPECT() *MockIHealthCheckServiceMockRecorder {
	return m.recorder
}

// CheckHealthCheck mocks base method.
func (m *MockIHealthCheckService) CheckHealthCheck() models.HealthCheckResponse {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckHealthCheck")
	ret0, _ := ret[0].(models.HealthCheckResponse)
	return ret0
}

// CheckHealthCheck indicates an expected call of CheckHealthCheck.
func (mr *MockIHealthCheckServiceMockRecorder) CheckHealthCheck() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckHealthCheck", reflect.TypeOf((*MockIHealthCheckService)(nil).CheckHealthCheck))
}
