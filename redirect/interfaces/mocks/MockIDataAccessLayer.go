// Code generated by MockGen. DO NOT EDIT.
// Source: .\IDataAccessLayer.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	dynamodb "github.com/aws/aws-sdk-go-v2/service/dynamodb"
	gomock "github.com/golang/mock/gomock"
)

// MockIDataAccessLayer is a mock of IDataAccessLayer interface.
type MockIDataAccessLayer struct {
	ctrl     *gomock.Controller
	recorder *MockIDataAccessLayerMockRecorder
}

// MockIDataAccessLayerMockRecorder is the mock recorder for MockIDataAccessLayer.
type MockIDataAccessLayerMockRecorder struct {
	mock *MockIDataAccessLayer
}

// NewMockIDataAccessLayer creates a new mock instance.
func NewMockIDataAccessLayer(ctrl *gomock.Controller) *MockIDataAccessLayer {
	mock := &MockIDataAccessLayer{ctrl: ctrl}
	mock.recorder = &MockIDataAccessLayerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIDataAccessLayer) EXPECT() *MockIDataAccessLayerMockRecorder {
	return m.recorder
}

// CreateTable mocks base method.
func (m *MockIDataAccessLayer) CreateTable(ctx context.Context, input *dynamodb.CreateTableInput) (*dynamodb.CreateTableOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTable", ctx, input)
	ret0, _ := ret[0].(*dynamodb.CreateTableOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateTable indicates an expected call of CreateTable.
func (mr *MockIDataAccessLayerMockRecorder) CreateTable(ctx, input interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTable", reflect.TypeOf((*MockIDataAccessLayer)(nil).CreateTable), ctx, input)
}

// GetItem mocks base method.
func (m *MockIDataAccessLayer) GetItem(ctx context.Context, input *dynamodb.GetItemInput) (*dynamodb.GetItemOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetItem", ctx, input)
	ret0, _ := ret[0].(*dynamodb.GetItemOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetItem indicates an expected call of GetItem.
func (mr *MockIDataAccessLayerMockRecorder) GetItem(ctx, input interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetItem", reflect.TypeOf((*MockIDataAccessLayer)(nil).GetItem), ctx, input)
}

// ListTables mocks base method.
func (m *MockIDataAccessLayer) ListTables(ctx context.Context) (*dynamodb.ListTablesOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListTables", ctx)
	ret0, _ := ret[0].(*dynamodb.ListTablesOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListTables indicates an expected call of ListTables.
func (mr *MockIDataAccessLayerMockRecorder) ListTables(ctx interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListTables", reflect.TypeOf((*MockIDataAccessLayer)(nil).ListTables), ctx)
}

// PutItem mocks base method.
func (m *MockIDataAccessLayer) PutItem(ctx context.Context, input *dynamodb.PutItemInput) (*dynamodb.PutItemOutput, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "PutItem", ctx, input)
	ret0, _ := ret[0].(*dynamodb.PutItemOutput)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// PutItem indicates an expected call of PutItem.
func (mr *MockIDataAccessLayerMockRecorder) PutItem(ctx, input interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "PutItem", reflect.TypeOf((*MockIDataAccessLayer)(nil).PutItem), ctx, input)
}
