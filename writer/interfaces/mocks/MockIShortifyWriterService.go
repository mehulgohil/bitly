// Code generated by MockGen. DO NOT EDIT.
// Source: .\IShortifyWriterService.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIShortifyWriterService is a mock of IShortifyWriterService interface.
type MockIShortifyWriterService struct {
	ctrl     *gomock.Controller
	recorder *MockIShortifyWriterServiceMockRecorder
}

// MockIShortifyWriterServiceMockRecorder is the mock recorder for MockIShortifyWriterService.
type MockIShortifyWriterServiceMockRecorder struct {
	mock *MockIShortifyWriterService
}

// NewMockIShortifyWriterService creates a new mock instance.
func NewMockIShortifyWriterService(ctrl *gomock.Controller) *MockIShortifyWriterService {
	mock := &MockIShortifyWriterService{ctrl: ctrl}
	mock.recorder = &MockIShortifyWriterServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIShortifyWriterService) EXPECT() *MockIShortifyWriterServiceMockRecorder {
	return m.recorder
}

// Writer mocks base method.
func (m *MockIShortifyWriterService) Writer(longURL, userEmail string) (string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Writer", longURL, userEmail)
	ret0, _ := ret[0].(string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Writer indicates an expected call of Writer.
func (mr *MockIShortifyWriterServiceMockRecorder) Writer(longURL, userEmail interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Writer", reflect.TypeOf((*MockIShortifyWriterService)(nil).Writer), longURL, userEmail)
}
