// Code generated by MockGen. DO NOT EDIT.
// Source: .\IHashingAlgorithm.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIHashingAlgorithm is a mock of IHashingAlgorithm interface.
type MockIHashingAlgorithm struct {
	ctrl     *gomock.Controller
	recorder *MockIHashingAlgorithmMockRecorder
}

// MockIHashingAlgorithmMockRecorder is the mock recorder for MockIHashingAlgorithm.
type MockIHashingAlgorithmMockRecorder struct {
	mock *MockIHashingAlgorithm
}

// NewMockIHashingAlgorithm creates a new mock instance.
func NewMockIHashingAlgorithm(ctrl *gomock.Controller) *MockIHashingAlgorithm {
	mock := &MockIHashingAlgorithm{ctrl: ctrl}
	mock.recorder = &MockIHashingAlgorithmMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIHashingAlgorithm) EXPECT() *MockIHashingAlgorithmMockRecorder {
	return m.recorder
}

// Hash mocks base method.
func (m *MockIHashingAlgorithm) Hash(input string) string {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Hash", input)
	ret0, _ := ret[0].(string)
	return ret0
}

// Hash indicates an expected call of Hash.
func (mr *MockIHashingAlgorithmMockRecorder) Hash(input interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Hash", reflect.TypeOf((*MockIHashingAlgorithm)(nil).Hash), input)
}
